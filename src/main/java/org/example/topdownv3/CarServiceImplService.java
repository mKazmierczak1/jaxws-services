package org.example.topdownv3;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by the XML-WS Tools. XML-WS Tools 4.0.1 Generated source version: 3.0
 */
@WebServiceClient(
    name = "CarServiceImplService",
    targetNamespace = "http://service.example.org/",
    wsdlLocation =
        "file:/D:/mkazm/Documents/eclipse-workspace/jaxws/src/main/resources/v3/carservice3.wsdl")
public class CarServiceImplService extends Service {

  private static final URL CARSERVICEIMPLSERVICE_WSDL_LOCATION;
  private static final WebServiceException CARSERVICEIMPLSERVICE_EXCEPTION;
  private static final QName CARSERVICEIMPLSERVICE_QNAME =
      new QName("http://service.example.org/", "CarServiceTopDownV3ImplService");

  static {
    URL url = null;
    WebServiceException e = null;
    try {
      url =
          new URL(
              "file:/D:/mkazm/Documents/eclipse-workspace/jaxws/src/main/resources/v3/carservice3.wsdl");
    } catch (MalformedURLException ex) {
      e = new WebServiceException(ex);
    }
    CARSERVICEIMPLSERVICE_WSDL_LOCATION = url;
    CARSERVICEIMPLSERVICE_EXCEPTION = e;
  }

  public CarServiceImplService() {
    super(__getWsdlLocation(), CARSERVICEIMPLSERVICE_QNAME);
  }

  public CarServiceImplService(WebServiceFeature... features) {
    super(__getWsdlLocation(), CARSERVICEIMPLSERVICE_QNAME, features);
  }

  public CarServiceImplService(URL wsdlLocation) {
    super(wsdlLocation, CARSERVICEIMPLSERVICE_QNAME);
  }

  public CarServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, CARSERVICEIMPLSERVICE_QNAME, features);
  }

  public CarServiceImplService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public CarServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   * @return returns CarService
   */
  @WebEndpoint(name = "CarServicePort")
  public CarService getCarServicePort() {
    return super.getPort(
        new QName("http://service.example.org/", "CarServicePort"), CarService.class);
  }

  /**
   * @param features A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.
   *     Supported features not in the <code>features</code> parameter will have their default
   *     values.
   * @return returns CarService
   */
  @WebEndpoint(name = "CarServicePort")
  public CarService getCarServicePort(WebServiceFeature... features) {
    return super.getPort(
        new QName("http://service.example.org/", "CarServicePort"), CarService.class, features);
  }

  private static URL __getWsdlLocation() {
    if (CARSERVICEIMPLSERVICE_EXCEPTION != null) {
      throw CARSERVICEIMPLSERVICE_EXCEPTION;
    }
    return CARSERVICEIMPLSERVICE_WSDL_LOCATION;
  }
}
